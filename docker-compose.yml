version: '3'
services:

  #PHP Service
  php:
    build:
      context: .envs/dev
      dockerfile: php/Dockerfile
      args:
        USERID: ${USERID}
        GROUPID: ${GROUPID}
    image: phuoc-php
    container_name: app_phuoc
    volumes:
       - ./:/var/www/app
    restart: on-failure
    working_dir: /var/www/app
    networks:
      - app-network

  cert:
    build:
      context: .envs/dev
      dockerfile: cert/Dockerfile
    image: phuoc-cert
    volumes:
      - ./.envs/dev/cert/files:/files
    networks:
      - app-network
    environment:
      HT_USER: web
      HT_PASSWORD: 123456

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: webserver_phuoc
    volumes:
      - ./:/var/www/app
      - ./.envs/dev/nginx/conf.d:/etc/nginx/conf.d
      - ./.envs/dev/cert/files:/etc/nginx/certs
    restart: on-failure
    tty: true
    ports:
      - "88:80"
      - "8443:443"
    networks:
      - app-network

  #MySQL Service
  mysql:
    image: mysql:5.7
    container_name: db_phuoc
    volumes:
      - db_data:/var/lib/mysql
      - ./.envs/dev/mysql/my.cnf:/etc/mysql/my.cnf
    restart: on-failure
    ports:
      - "1306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ms_root
      MYSQL_DATABASE: laravel
      MYSQL_USER: phuoc
      MYSQL_PASSWORD: 1
    networks:
      - app-network

  node:
    build:
      context: .envs/dev
      dockerfile: node/Dockerfile
    image: phuoc-node
    volumes:
      - .:/var/www/app
    working_dir: /var/www/app
    networks:
      - app-network
    
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  db_data:
